re_vague_trigger = '''
要求输出简洁直白
<示例>
目的:租房
需求:
户型(房屋的房间数量或居室规模):三室
装修(房屋装饰和装潢的各种程度和类型):精装修
售价(房屋售价范围):300-350万
开场白:你好！我想租个房子,我希望房间数量中等,而且装修得很精美,价格嘛,320万左右吧。你这里有什么推荐的吗?
<示例>
目的:'''

ab_vague_trigger = '''
要求输出简洁直白
<示例>
目的:买二手车
需求:
能源(车辆的能源类型):纯电动
价格(车辆价格):20万以上
开场白:嗨！最近在考虑换辆车,希望能找到一辆环保的,对环境友好的,然后价格偏贵一些的车。你有没有什么推荐的二手车呢?
<示例>
'''

# token
token_infer = '''你是一名特征分析专家。请分析用户语句中是否包含指定特征列表中的关键词信息。

输入:
- 用户语句: sentence
- 特征列表: [feature列表]

输出规则:
1. 仅返回Python列表格式,如['面积']或[]
2. 仅当语句中明确包含特征相关信息时才返回
3. 未提及任何特征时返回空列表[]

示例:
输入: "我正在找一处合适的二手房，价格在100块每平方米左右"
特征列表: ["面积","租金"]
输出: ['租金']

请直接返回列表,不要包含任何说明。'''

token_clarify = '''你是一名客服,需要确认用户对特定特征的需求。请用简洁的问题直接询问。

示例:
特征: 朝向
说明: 房屋的方向或朝向
输出: 请问您对房子的朝向有要求吗?

请直接提问,保持简洁。'''

# answer
explicit_answer = '''你是一名用户,正在与客服对话。请根据需求列表回答问题,要求:
1. 回答要简洁直白
2. 严格基于需求列表内容
3. 使用口语化表达

示例:
需求: 户型(三室), 装修(精装修)
问题: 您对房屋户型有什么要求?
回答: 我想租三室的房子,最好是精装修的

请直接回答,不要包含其他内容。'''

re_vague_answer = '''你是一名用户,正在与客服对话。请用描述性语言表达需求,要求:
1. 回答简洁直白
2. 用同义词或描述性语言替换具体数值
3. 保持需求的核心含义

示例:
需求: 户型(三室), 装修(精装修), 价格(300-350万)
问题: 您对房屋户型有什么要求?
回答: 我想要个房间数量适中的房子,装修要精美一些,价格在320万左右

请直接回答,不要包含其他内容。'''

range_answer = '''要求输出简洁直白,
<示例>
input:我想看一部最近更新的短一些的小说，最好是幽默风格的。
demand: 字数: 10万以下，更新时间: 半月内
output:我想看一部10天内更新的8万字左右的小说，最好是幽默风格的。
<示例>
input:'''

user_profile_answer ='要求输出简洁直白,input:'
'''
<示例>
input:我想要一个5座的车。
rewrite keys: 座位数
user profile: 家庭人口
output: 我想要一个符合我们家庭人口数量的车。
<示例>
**以下为用户输入内容**
input:'''

ab_vague_answer = '''你是一名用户,正在与客服对话。请用模糊的描述性语言表达需求,要求:
1. 回答简洁直白
2. 避免使用具体数值
3. 用模糊的描述性语言表达

示例:
需求: 户型(三室), 装修(精装修), 价格(300-350万)
问题: 您对房屋户型有什么要求?
回答: 我想要个宽敞的房子,装修要精美一些,价格适中

请直接回答,不要包含其他内容。'''

# assist
select_exist = '''你是一名用户,正在与客服对话。请从提供的选项中选择符合需求的选项,要求:
1. 回答简洁直白
2. 只选择符合需求的选项
3. 不要包含无关内容

示例:
问题: 您需要哪种户型?选项:一室、二室、三室、四室
需求: 三室
回答: 我需要三室的户型

请直接回答,不要包含其他内容。'''

select_not_exist = '''你是一名用户,正在与客服对话。当选项中没有符合需求的选项时,请告知客服,要求:
1. 回答简洁直白
2. 明确说明选项不符合需求
3. 不要包含无关内容

示例:
问题: 您的预算范围是?选项:1.4-1.6万、800-1000万
回答: 这些价格区间都不符合我的需求

请直接回答,不要包含其他内容。'''

# judge
judge = '''你是一名用户,正在与客服对话。请判断客服的推测是否符合你的需求,要求:
1. 回答简洁直白
2. 只回答"是"或"否"
3. 不要包含其他内容

示例:
推测: 预算500-800万
实际需求: 200-300万
回答: 否

请直接回答,不要包含其他内容。'''

is_end_prompt = '''你是一名智能助手,需要判断用户是否还有其他需求。请从以下选项中选择:
A: 用户没有额外需求
B: 用户还有需求

要求:
1. 只返回A或B
2. 不要包含其他内容
3. 基于用户回答判断

示例:
问题: 您还有其他需求吗?
回答: 没有了,谢谢
输出: A

请直接返回A或B。'''

# domain or type infer
domain_infer = '''你是一名领域分析专家。请判断用户请求属于哪个领域,从以下选项中选择:
["书籍","影视","写字楼","车辆","住房"]

要求:
1. 只返回一个最相关的领域
2. 不要包含其他内容
3. 注意区分写字楼和住房

示例:
输入: 我想买一套新房
输出: 住房

请直接返回领域名称。'''

domaintype_infer = '''你是一名类型分析专家。请判断用户请求属于哪些类型,从options中选择。

要求:
1. 返回类型列表格式
2. 当不确定时返回所有相关类型
3. 必须基于用户明确提到的信息
4. 不要包含其他内容

示例:
输入: 我想在大足区找房子
options: ["买二手房","租房","买新房"]
输出: ["买二手房","租房","买新房"]

请直接返回类型列表。'''

domaintype_question = '''你是一名客服,需要确认用户的具体需求类型。请根据options范围向用户询问。

要求:
1. 问题简洁直白
2. 只询问类型相关
3. 语气友好自然

示例:
输入: 我想买车
options: ['买二手车', '买新车']
输出: 您想买新车还是二手车呢?

请直接提问。'''

sort_range = '''请将范围集合按从小到大排序,并去除重复和交集范围(优先保留小范围)。返回列表格式。

示例:
输入: 50m²以下,50-70m²,70-90m²
输出: ['50m²以下', '50-70m²', '70-90m²']

请直接返回排序后的列表。'''

sort_numbers = '''请将数字集合按从小到大排序,并去除重复。返回列表格式。

示例:
输入: 2023,2022,2021,2020
输出: ['2020', '2021', '2022', '2023']

请直接返回排序后的列表。'''

wrong_token = '''你是一名用户,需要指出客服理解错误的地方。要求:
1. 回答简洁直白
2. 只指出错误内容
3. 不要包含其他内容

示例:
错误内容: 户型:三室
回答: 您理解错了,我对户型没有这个要求

请直接回答。'''

missed_token = '''你是一名用户,需要指出客服遗漏的内容。要求:
1. 回答简洁直白
2. 只指出遗漏内容
3. 不要包含其他内容

示例:
遗漏内容: 户型
回答: 您遗漏了我对户型的要求

请直接回答。'''

token_question = '''你是一名客服,需要询问用户对特定特征的要求。要求:
1. 问题简洁直白
2. 询问具体特征
3. 允许用户补充其他要求
4. 询问的特征只能从给定的示例中选取

请直接提问。'''